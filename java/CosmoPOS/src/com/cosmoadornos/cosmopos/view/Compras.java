/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cosmoadornos.cosmopos.view;

import com.cosmoadornos.cosmopos.controller.CompraController;
import com.cosmoadornos.cosmopos.controller.PrecioController;
import com.cosmoadornos.cosmopos.controller.ProductoController;
import com.cosmoadornos.cosmopos.controller.ProveedorController;
import com.cosmoadornos.cosmopos.controller.SubTipoController;
import com.cosmoadornos.cosmopos.controller.TipoProductoController;
import com.cosmoadornos.cosmopos.model.Compra;
import com.cosmoadornos.cosmopos.model.Precio;
import com.cosmoadornos.cosmopos.model.Producto;
import com.cosmoadornos.cosmopos.model.Proveedor;
import com.cosmoadornos.cosmopos.model.SubTipo;
import com.cosmoadornos.cosmopos.model.TipoProducto;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author b41n
 */
public class Compras extends javax.swing.JFrame {
    
    CompraController comcon = new CompraController();
    
    ProveedorController provcon = new ProveedorController();
    ArrayList<Proveedor> proveedores;
    
    ProductoController prodcon = new ProductoController();
    ArrayList<Producto> productos, prod;
    
    TipoProductoController tipocon = new TipoProductoController();
    ArrayList<TipoProducto> tipos;
    
    SubTipoController stipocon = new SubTipoController();
    ArrayList<SubTipo> subtipos;
    
    PrecioController precon = new PrecioController();
    
    private String nroFactura;
    private int compraId;
    
    String p;
    private int proveedorId;
    
    ArrayList<Precio> precios;
    private int tipo;
    private int subTipo;
    
    String referencia;
    int prodId = 0;

    /**
     * Creates new form Compras
     */
    public Compras() {
        initComponents();
        setLocationRelativeTo(null);
        bloquearCampos();
        cmbSubTipo1.setEnabled(false);
        btnAgregarPrecio.setEnabled(false);
        btnNuevo.setEnabled(false);
        llenarCombos();
        
    }
    private void bloquearCampos(){
        txtReferencia.setEditable(false);
        cmbProductos.setEnabled(false);
        txtProducto.setEnabled(false);
        cmbTipoProducto.setEnabled(false);
        cmbSubTipo.setEnabled(false);
        txtContenido.setEnabled(false);
        txtCantidad.setEnabled(false);
        txtCosto.setEnabled(false);
        txtVenta.setEnabled(false);
        btnActualizarProducto.setEnabled(false);
        btnAgregarProducto.setEnabled(false);
        btnGuardarProductos.setEnabled(false);
        btnGuardarPrecios.setEnabled(false);
    }
    
    
    private void llenarCombos(){
        proveedores = provcon.buscarProveedoresCombo();
        tipos = tipocon.buscarTiposProducto();
        
        for(int i = 0 ; i <= proveedores.size()-1 ; i++){
            cmbProveedores.addItem(proveedores.get(i).getProveedorNombre());
        }
        
        for(int i = 0 ; i <= tipos.size()-1 ; i++){
            cmbTipoProducto.addItem(tipos.get(i).getTipo());
        }
        subtipos=stipocon.buscarSubTipos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        pnlCompra = new javax.swing.JPanel();
        txtFactura = new javax.swing.JTextField();
        cmbProveedores = new javax.swing.JComboBox<>();
        btnIniciarFactura = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pnlDetalle = new javax.swing.JPanel();
        cmbProductos = new javax.swing.JComboBox<>();
        txtProducto = new javax.swing.JTextField();
        cmbTipoProducto = new javax.swing.JComboBox<>();
        cmbSubTipo = new javax.swing.JComboBox<>();
        txtContenido = new javax.swing.JTextField();
        txtCosto = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        btnAgregarProducto = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnActualizarProducto = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCompras = new javax.swing.JTable();
        btnGuardarPrecios = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblProducto = new javax.swing.JLabel();
        cmbSubTipo1 = new javax.swing.JComboBox<>();
        txtVenta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtReferencia = new javax.swing.JTextField();
        btnAgregarPrecio = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbPrecios = new javax.swing.JTable();
        btnGuardarProductos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(75, 127, 210));

        jPanel2.setBackground(new java.awt.Color(75, 127, 255));

        txtFactura.setToolTipText("");

        cmbProveedores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Proveedores..." }));

        btnIniciarFactura.setText("Iniciar Factura");
        btnIniciarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarFacturaActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Datos de la compra");

        jLabel3.setText("No. Factura");

        javax.swing.GroupLayout pnlCompraLayout = new javax.swing.GroupLayout(pnlCompra);
        pnlCompra.setLayout(pnlCompraLayout);
        pnlCompraLayout.setHorizontalGroup(
            pnlCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCompraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbProveedores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCompraLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnIniciarFactura))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCompraLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlCompraLayout.setVerticalGroup(
            pnlCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCompraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCompraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbProveedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIniciarFactura)
                .addContainerGap())
        );

        cmbProductos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Productos Existentes." }));
        cmbProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProductosActionPerformed(evt);
            }
        });

        txtProducto.setText("Producto");

        cmbTipoProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipos de productos." }));
        cmbTipoProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoProductoActionPerformed(evt);
            }
        });

        cmbSubTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unidad de medida" }));

        txtContenido.setText("Contenito");

        txtCosto.setText("Costo");

        txtCantidad.setText("Cantidad");

        btnAgregarProducto.setText("Agregar Producto");
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo Producto");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnActualizarProducto.setText("Actualizar Producto");

        javax.swing.GroupLayout pnlDetalleLayout = new javax.swing.GroupLayout(pnlDetalle);
        pnlDetalle.setLayout(pnlDetalleLayout);
        pnlDetalleLayout.setHorizontalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProducto)
                    .addComponent(cmbProductos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbTipoProducto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetalleLayout.createSequentialGroup()
                        .addComponent(txtContenido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addComponent(cmbSubTipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDetalleLayout.createSequentialGroup()
                        .addComponent(btnActualizarProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAgregarProducto))))
                .addContainerGap())
        );
        pnlDetalleLayout.setVerticalGroup(
            pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDetalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbTipoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSubTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContenido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDetalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarProducto)
                    .addComponent(btnActualizarProducto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNuevo)
                .addContainerGap())
        );

        tbCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Tipo", "Contenido", "Costo", "Cant", "Inventario"
            }
        ));
        jScrollPane1.setViewportView(tbCompras);

        btnGuardarPrecios.setText("Guardar Precios");
        btnGuardarPrecios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarPreciosActionPerformed(evt);
            }
        });

        cmbSubTipo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unidad de medida" }));

        txtVenta.setText("Venta");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Producto:");

        txtReferencia.setText("Referencia");

        btnAgregarPrecio.setText("Agregar Precio");
        btnAgregarPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPrecioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txtReferencia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAgregarPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(cmbSubTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVenta))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSubTipo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarPrecio)
                    .addComponent(txtReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbPrecios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Producto", "Tipo", "Precio", "Referencia"
            }
        ));
        jScrollPane2.setViewportView(tbPrecios);
        if (tbPrecios.getColumnModel().getColumnCount() > 0) {
            tbPrecios.getColumnModel().getColumn(0).setMinWidth(200);
            tbPrecios.getColumnModel().getColumn(0).setPreferredWidth(200);
            tbPrecios.getColumnModel().getColumn(0).setMaxWidth(200);
            tbPrecios.getColumnModel().getColumn(1).setMinWidth(100);
            tbPrecios.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbPrecios.getColumnModel().getColumn(1).setMaxWidth(100);
            tbPrecios.getColumnModel().getColumn(2).setMinWidth(90);
            tbPrecios.getColumnModel().getColumn(2).setPreferredWidth(90);
            tbPrecios.getColumnModel().getColumn(2).setMaxWidth(90);
        }

        btnGuardarProductos.setText("Guardar Productos");
        btnGuardarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProductosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlDetalle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnGuardarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardarPrecios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pnlCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardarPrecios)
                    .addComponent(btnGuardarProductos)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbTipoProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoProductoActionPerformed
        // TODO add your handling code here:
        //
        
        int s = cmbTipoProducto.getSelectedIndex();
        System.out.println("s: "+s);
        if(s!=0){
            tipo = tipos.get(cmbTipoProducto.getSelectedIndex()-1).getId();
            System.out.println("ID: "+tipo);
            //int t = cmbTipoProducto.getSelectedIndex();
            //id -=1;
            if(tipo>0){
                llenarComboSubTipos(tipo);
                //JOptionPane.showMessageDialog(null,"SubTipoId "+subtipos.get(cmbSubTipo1.getSelectedIndex()).getSubTipoId());
            }else{
                System.out.println("Seleccione.");

            }
        }else{
            System.out.println("Seleccione.");
        }

        /*for(int i = 0 ; i <= tipos.size()-1 ; i++){

            if(tipos.get(i).getTipo().contains(t)){

            }
        }*/
    }//GEN-LAST:event_cmbTipoProductoActionPerformed

    private void btnIniciarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarFacturaActionPerformed
        // TODO add your handling code here:
        p = cmbProveedores.getSelectedItem().toString();
        iniciarFactura();
    }//GEN-LAST:event_btnIniciarFacturaActionPerformed

    private void iniciarFactura(){
    
        
        nroFactura = txtFactura.getText();
        
        
        
        if(nroFactura.equals("") || cmbProveedores.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(null, "Factura y proveedor son obligatorios;");
        }else{
            if(!p.equals("Proveedores...")){
                for(int i = 0 ; i <= proveedores.size()-1 ; i++){
                    if(proveedores.get(i).getProveedorNombre().contains(p)){
                        proveedorId = proveedores.get(i).getId();
                        Compra compra = new Compra(
                                proveedorId,
                                Integer.parseInt(nroFactura)
                        );
                        productos = prodcon.buscarProductosCombo(proveedorId);
                        if(comcon.guardarCompra(compra)){
                            txtFactura.setEnabled(false);
                            cmbProveedores.setEnabled(false);
                            btnIniciarFactura.setEnabled(false);
                            compraId = comcon.buscarCompraId(proveedorId, Integer.parseInt(nroFactura));
                            nuevoProducto();
                            //llenarComboProductos(p);
                            prod = new ArrayList();
                        }
                    }
                }
                if(!productos.isEmpty()){
                    for(int i = 0 ; i <= productos.size()-1 ; i++){
                        cmbProductos.addItem(productos.get(i).getNombre());
                    }
                }else{
                    System.out.println("No se han encontrado productos de este proveedor.");
                    //JOptionPane.showMessageDialog(null, "Proveedor sin productos registrados.");
                }
            }
        }
    }
    
    private void llenarComboProductos(String proveedor){
        //String p = cmbProveedores.getSelectedItem().toString();
        if(!proveedor.equals("Proveedores...")){
            //int proveedorId;
            for(int i = 0 ; i <= proveedores.size()-1 ; i++){
                if(proveedores.get(i).getProveedorNombre().contains(proveedor)){
                    proveedorId = proveedores.get(i).getId();
                    productos = prodcon.buscarProductosCombo(proveedorId);
                    //JOptionPane.showMessageDialog(null, "Proveedor seleccionado: "+p);
                }
            }
            if(!productos.isEmpty()){
                for(int i = 0 ; i <= productos.size()-1 ; i++){
                    cmbProductos.addItem(productos.get(i).getNombre());
                }
            }else{
                System.out.println("No se han encontrado productos de este proveedor.");
                //JOptionPane.showMessageDialog(null, "Proveedor sin productos registrados.");
            }
        }
    }
    
    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        // TODO add your handling code here:
        agregarProducto();
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    private void agregarProducto(){
        //compraId = comcon.buscarCompraId(proveedorId, Integer.parseInt(nroFactura));
        prod.add(new Producto(
                txtProducto.getText()
        ));
        //String[] campos = {"Producto", "","","","",""};
        //DefaultTableModel model = new DefaultTableModel(null, campos);
        DefaultTableModel model;// = new DefaultTableModel();
        model = (DefaultTableModel) tbCompras.getModel();
        
        int cant = Integer.parseInt(txtCantidad.getText());
        int cont = Integer.parseInt(txtContenido.getText());
        int inv = cant*cont;
        String[]registro = {
            txtProducto.getText(),
            cmbSubTipo.getSelectedItem().toString(),
            ""+cont,
            txtCosto.getText(),
            ""+cant,
            ""+inv
        };
        model.addRow(registro);
        tbCompras.setModel(model);
        lblProducto.setText(txtProducto.getText());
        bloquearCampos();
        btnGuardarProductos.setEnabled(true);
        cmbSubTipo1.setEnabled(true);
        txtVenta.setEnabled(true);
        btnAgregarPrecio.setEnabled(true);
        precios = new ArrayList();
        
        String subtipo;
        subtipo = cmbSubTipo.getSelectedItem().toString();
        for(int i = 0 ; i <= subtipos.size()-1; i++){
            if(subtipos.get(i).getTipo().contains(subtipo) && subtipos.get(i).getTipoProductoId()==tipo){
                subTipo =subtipos.get(i).getSubTipoId();
            }
        }
        
        //referencia+="-"+tipo+"-"+subTipo;
        //txtReferencia.setText(referencia);
    }
    
    private void btnGuardarPreciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarPreciosActionPerformed
        // TODO add your handling code here:
        if(guardarPrecios()){
            JOptionPane.showMessageDialog(null, "Lista de precios Guardada.");
            btnGuardarPrecios.setEnabled(false);
            //System.out.println("Lista de precios Guardada.");
        }else{
            JOptionPane.showMessageDialog(null, "Error guardando la lista de precios.");
            System.out.println("Error guardando la lista de precios.");
        }
    }//GEN-LAST:event_btnGuardarPreciosActionPerformed

    private void cmbProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProductosActionPerformed
        // TODO add your handling code here:
        obtenerDatosProducto();
    }//GEN-LAST:event_cmbProductosActionPerformed

    private void obtenerDatosProducto(){
        
        String productoNombre = cmbProductos.getSelectedItem().toString();
        txtProducto.setText(productoNombre);
        btnAgregarProducto.setEnabled(false);
        btnActualizarProducto.setEnabled(true);
    }
    
    private void actualizarProducto(){
        
    }
    
    private void btnAgregarPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPrecioActionPerformed
        // TODO add your handling code here:
        agregarPrecio();
    }//GEN-LAST:event_btnAgregarPrecioActionPerformed

    private void agregarPrecio(){
        String subtipo;
        subtipo = cmbSubTipo1.getSelectedItem().toString();
        for(int i = 0 ; i <= subtipos.size()-1; i++){
            if(subtipos.get(i).getTipo().contains(subtipo) && subtipos.get(i).getTipoProductoId()==tipo){
                subTipo =subtipos.get(i).getSubTipoId();
                btnNuevo.setEnabled(true);
                //JOptionPane.showMessageDialog(null,"SubTipoId: " +subTipo);
            }
        }
        precios.add(new Precio(
                subTipo,
                Integer.parseInt(txtVenta.getText()),
                txtReferencia.getText(),
                lblProducto.getText()
        ));
        DefaultTableModel model;// = new DefaultTableModel();
        model = (DefaultTableModel) tbPrecios.getModel();
        
        String[]registro ={
            lblProducto.getText(),
            cmbSubTipo1.getSelectedItem().toString(),
            txtVenta.getText(),
            txtReferencia.getText()
        };
        model.addRow(registro);
        tbPrecios.setModel(model);
        
    }
    
    private void btnGuardarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProductosActionPerformed
        // TODO add your handling code here:
        guardarProductos();
    }//GEN-LAST:event_btnGuardarProductosActionPerformed

    private boolean guardarProductos(){
        //Primero guardamos en la tabla productos:
        //compraId = comcon.buscarCompraId(proveedorId, Integer.parseInt(nroFactura));
        //JOptionPane.showMessageDialog(null, "Id de la compra: "+compraId);
        if(compraId>0){
            if(prodcon.guardarProductos(prod, compraId) == true){
                JOptionPane.showMessageDialog(null, "Productos guardados.");
                btnGuardarProductos.setEnabled(true);
                btnGuardarPrecios.setEnabled(true);
            }else{
                JOptionPane.showMessageDialog(null, "Error guardando los productos.");
            }
        }else{
            JOptionPane.showMessageDialog(null, "Paila con el id: "+compraId);
        }
        
        
        return false;
    }
    
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        nuevoProducto();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void nuevoProducto(){
        referencia ="";
        prodId = prodcon.obtenerUltimoProducto()+1;
        //referencia =prodId = prodcon.obtenerUltimoProducto();
        referencia ="."+prodId+".";
        txtReferencia.setText(referencia);
        cmbProductos.setEnabled(true);
        txtProducto.setEnabled(true);
        cmbTipoProducto.setEnabled(true);
        cmbSubTipo.setEnabled(true);
        txtContenido.setEnabled(true);
        txtCantidad.setEnabled(true);
        txtCosto.setEnabled(true);
        btnAgregarProducto.setEnabled(true);
    }
    
    private void llenarComboSubTipos(int tipo){
        cmbSubTipo.removeAllItems();
        cmbSubTipo1.removeAllItems();
        for(int i = 0 ; i <= subtipos.size()-1 ; i++){
            if(subtipos.get(i).getTipoProductoId() == tipo){
                cmbSubTipo.addItem(subtipos.get(i).getTipo());
                cmbSubTipo1.addItem(subtipos.get(i).getTipo());
                System.out.println("Sub Tipo: "+ subtipos.get(i).getTipo());
            }
        }
        
    }
    
    
    private boolean guardarPrecios(){
        return precon.guardarPrecios(precios, compraId);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarProducto;
    private javax.swing.JButton btnAgregarPrecio;
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnGuardarPrecios;
    private javax.swing.JButton btnGuardarProductos;
    private javax.swing.JButton btnIniciarFactura;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox<String> cmbProductos;
    private javax.swing.JComboBox<String> cmbProveedores;
    private javax.swing.JComboBox<String> cmbSubTipo;
    private javax.swing.JComboBox<String> cmbSubTipo1;
    private javax.swing.JComboBox<String> cmbTipoProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblProducto;
    private javax.swing.JPanel pnlCompra;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JTable tbCompras;
    private javax.swing.JTable tbPrecios;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtContenido;
    private javax.swing.JTextField txtCosto;
    private javax.swing.JTextField txtFactura;
    private javax.swing.JTextField txtProducto;
    private javax.swing.JTextField txtReferencia;
    private javax.swing.JTextField txtVenta;
    // End of variables declaration//GEN-END:variables
}
